group 'org.openflexo.demo'
version '1.0-SNAPSHOT'

buildscript {
    ext.openflexo_version = '1.9.0-SNAPSHOT'
    ext.destination = "/home/openflexoserver"
}

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    maven { url "https://maven.openflexo.org/artifactory/openflexo-deps/" }
}

dependencies {
    // dependency to the server
   compile "org.openflexo:http-server:${openflexo_version}"
 
    // set of connectors
    compile "org.openflexo:docxconnector:${openflexo_version}"
    compile "org.openflexo:excelconnector:${openflexo_version}"
    compile "org.openflexo:pdfconnector:${openflexo_version}"
    compile "org.openflexo:ginaconnector:${openflexo_version}"
 
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


def appDir = file(buildDir.canonicalPath + "/app");

task cleanApp(group: "deployement" ) {
    doLast {
        if (appDir.exists()) {
            appDir.deleteDir();
        }
    }
}

task copyProject(type: Copy, group: "deployement") {
    from "demo.prj"
    into appDir.canonicalPath + "/demo.prj"
}


task copyBinary(type: Copy, group: "deployement") {
    from "deploy"
    into appDir.canonicalPath
}

task copyWebResources(type: Copy, group: "deployement") {
    from "webroot"
    into appDir.canonicalPath + "/webroot"
}

task copyJars (type: Copy, group: "deployement") {
    from configurations.runtime.resolve()
    into appDir.canonicalPath + "/libs"
}

task sync (type: Sync, group: "deployement") {
    from appDir.canonicalPath
    into destination
}

task copy (dependsOn: [
        "cleanApp", "assemble", "copyJars", "copyProject",
        "copyBinary", "copyWebResources"
    ], group: "deployement") {
}

task stopApp(type: Exec, group: "deployement") {
    commandLine "./stop.sh"
    workingDir destination
}

task startApp(type: Exec, group: "deployement") {
    commandLine "./start.sh"
    workingDir destination
}

task deploy (
    dependsOn: ["copy", "stopApp", "sync", "startApp"],
    group: "deployement"
) {
}
